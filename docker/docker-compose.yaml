name: pet-hub
services:
    postgres:
        image: 'postgres:17.4-alpine'
        container_name: 'pet-postgres'
        restart: on-failure:2
        environment:
            POSTGRES_DB: 'postgres'
            POSTGRES_USER: 'pet-admin'
            POSTGRES_PASSWORD: 'pet-password'
        ports:
            - '5432:5432'
        volumes:
            # scripts located in mapped directory will run automatically upon the creation of new container
            - ./postgres:/docker-entrypoint-initdb.d
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d postgres -U pet-admin" ]
            interval: 10s
            timeout: 5s
            retries: 3

    rabbitmq:
        container_name: 'pet-rabbitmq'
        restart: on-failure:2
        build:
            context: ./rabbitmq
            dockerfile: Dockerfile
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 5s
            timeout: 3s
            retries: 3

    mongodb:
        image: 'mongo:8.0-rc-noble'
        container_name: 'pet-mongodb'
        restart: on-failure:2
        environment:
            MONGO_INITDB_ROOT_USERNAME: 'pet-admin'
            MONGO_INITDB_ROOT_PASSWORD: 'pet-password'
            MONGO_INITDB_DATABASE: 'petHub'
        ports:
            - '27017:27017'
        volumes:
            # scripts located in mapped directory will run automatically upon the creation of new container
            - ./mongodb:/docker-entrypoint-initdb.d
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
            interval: 10s
            timeout: 10s
            retries: 5

volumes:
    # persists Postgres data even if container is removed
    postgres_data:
