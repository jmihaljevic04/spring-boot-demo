create table weather_station_import_status
(
    id   int primary key,
    name varchar(255) not null
);

insert into weather_station_import_status(id, name)
values (1, 'REQUESTED'),
       (2, 'STARTED'),
       (3, 'IN_PROGRESS'),
       (4, 'COMPLETED'),
       (5, 'FAILED'),
       (6, 'SKIPPED');

create table weather_station_import
(
    id                 bigint generated by default as identity primary key,
    file_path varchar(255),
    file_hash varchar(255),
    requested_at       timestamp,
    requested_by       varchar(255) not null,
    is_manual_import   boolean      not null,
    started_at         timestamp,
    finished_at        timestamp,
    status_description varchar(1000),
    import_status_id   int          not null references weather_station_import_status (id)
);

create table weather_station
(
    id              bigint generated by default as identity primary key,
    external_id     varchar(255) not null unique,
    name            varchar(255) not null,
    timezone        varchar(255),
    latitude        decimal(3, 2),
    longitude       decimal(3, 2),
    elevation       decimal(5, 2),
    country_code    varchar(2)   not null references country (alpha_2_code),
    import_id       bigint       not null references weather_station_import (id),
    created_at      timestamp    not null default current_timestamp,
    created_by      text         not null,
    last_updated_at timestamp,
    last_updated_by text,
    version         int          not null default 0
);

create table weather_station_staging
(
    id          bigint generated by default as identity primary key,
    external_id varchar(255),
    name        varchar(255),
    country     varchar(2),
    timezone    varchar(255),
    latitude    decimal(3, 2),
    longitude   decimal(3, 2),
    elevation   decimal(5, 2),
    import_id bigint not null references weather_station_import (id),
    enabled     boolean default false
);

create procedure weather_station_import(importId bigint, enabled_countries varchar[])
    language plpgsql
as
$$
begin

    insert into weather_station_staging(external_id, name, country, timezone, latitude, longitude, elevation, import_id)
    select jdata.external_id,
           jdata.name,
           upper(jdata.country),
           jdata.timezone,
           jdata.latitude,
           jdata.longitude,
           jdata.elevation,
           importId
    from (select jt.*
          from json_table((select file_content from weather_station_json_temp),
                          '$[*]' columns (external_id text path '$.id',
                              name text path '$.name',
                              country text path '$.country',
                              timezone text path '$.timezone',
                              latitude decimal(3, 2) path '$.latitude',
                              longitude decimal(3, 2) path '$.longitude',
                              elevation decimal(3, 2) path '$.elevation'
                              )) as jt) as jdata;

    update weather_station_staging set enabled = true where country in (enabled_countries);

end;
$$;

